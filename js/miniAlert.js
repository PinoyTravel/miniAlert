// Generated by CoffeeScript 1.3.3
(function() {

  jQuery(function() {
    $.miniAlert = function(element, options) {
      var init, setState,
        _this = this;
      this.defaults = {
        text: 'x',
        cssClass: 'close',
        position: 'before',
        effect: 'fade',
        duration: 100,
        onLoad: function() {},
        onHide: function() {},
        onHidden: function() {}
      };
      this.state = '';
      this.settings = {};
      this.$element = $(element);
      setState = function(state) {
        this.state = state;
      };
      this.getState = function() {
        return state;
      };
      this.getSetting = function(settingKey) {
        return this.settings[settingKey];
      };
      this.callSettingFunction = function(functionName, args) {
        if (args == null) {
          args = [];
        }
        return this.settings[functionName].apply(this, args);
      };
      init = function() {
        var $button;
        _this.settings = $.extend({}, _this.defaults, options);
        $button = $('<button />', {
          "class": _this.settings.cssClass,
          text: _this.settings.text
        });
        if (_this.settings.position === 'after') {
          return $button.appendTo(_this.$element);
        } else {
          return $button.prependTo(_this.$element);
        }
      };
      init();
      return this;
    };
    return $.fn.miniAlert = function(options) {
      return this.each(function() {
        var plugin;
        if (void 0 === ($(this)).data('miniAlert')) {
          plugin = new $.miniAlert(this, options);
          return ($(this)).data('miniAlert', plugin);
        }
      });
    };
  });

}).call(this);
